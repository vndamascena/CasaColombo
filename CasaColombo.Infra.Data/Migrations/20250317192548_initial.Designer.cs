// <auto-generated />
using System;
using CasaColombo.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CasaColombo.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250317192548_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CasaColombo.Domain.Entities.Depositoss.Depositos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("DEPOSITOS", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Fornecedores.FornecedorGeral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("ForneProdu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORNECEDORPRODUTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("NOME");

                    b.Property<string>("TelFor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELFORNECEDOR");

                    b.Property<string>("TelVen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELVENDEDOR");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Vendedor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VENDEDOR");

                    b.HasKey("Id");

                    b.ToTable("FORNECEDORGERAL", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Lojas.Loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Loja");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.BaixaOcorrencia", b =>
                {
                    b.Property<int>("BaixaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaixaId"));

                    b.Property<int>("CodProduto")
                        .HasColumnType("int")
                        .HasColumnName("CODPRODUTO");

                    b.Property<DateTime>("DataTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA");

                    b.Property<int>("FornecedorGeralId")
                        .HasColumnType("int")
                        .HasColumnName("FORNECEDO");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroNota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NUMERONOTA");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int")
                        .HasColumnName("OCORRENCIAID");

                    b.Property<int?>("OcorrenciaId1")
                        .HasColumnType("int");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUTO");

                    b.Property<int>("TipoOcorrenciaId")
                        .HasColumnType("int")
                        .HasColumnName("TIPOOCORRENCIAID");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOID");

                    b.HasKey("BaixaId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("OcorrenciaId1");

                    b.ToTable("BAIXAOCORRENCIA", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.Ocorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<int>("CodProduto")
                        .HasMaxLength(7)
                        .HasColumnType("int")
                        .HasColumnName("CODPRODUTO");

                    b.Property<DateTime>("DataTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA");

                    b.Property<int>("FornecedorGeralId")
                        .HasMaxLength(70)
                        .HasColumnType("int")
                        .HasColumnName("FORNECEDO");

                    b.Property<int>("LojaId")
                        .HasColumnType("int")
                        .HasColumnName("LOJA");

                    b.Property<string>("NumeroNota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NUMERONOTA");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("PRODUTO");

                    b.Property<int>("TipoOcorrenciaId")
                        .HasColumnType("int")
                        .HasColumnName("TIPOOCORRENCIA");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOID");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorGeralId");

                    b.HasIndex("LojaId");

                    b.HasIndex("TipoOcorrenciaId");

                    b.ToTable("OCORRENCIA", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.TipoOcorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TIPOOCORRENCIA ", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.BaixaAutProdFalt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("CodigoFornecedor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOFORNECEDOR");

                    b.Property<DateTime>("DataHoraBaixa")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORABAIXA");

                    b.Property<string>("DataSolicitacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATASOLICITACAO");

                    b.Property<string>("Fornecedor1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORNECEDOR1");

                    b.Property<string>("Fornecedor2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORNECEDOR2");

                    b.Property<string>("Loja")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOJA");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOMEPRODUTO");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<int>("ProdutoFaltaId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("UsuarioAutorizador")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOAUTORIZADOR");

                    b.Property<string>("UsuarioBaixa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOBAIXA");

                    b.Property<string>("Valor1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALOR1");

                    b.Property<string>("Valor2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALOR2");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoFaltaId");

                    b.ToTable("BAIXAAUTPRODFALT", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAENTRADA");

                    b.Property<DateTime>("DataUltimaAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MARCA");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMEPRODUTO");

                    b.Property<string>("NumeroLote")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NUMERO LOTE");

                    b.Property<int>("ProdutoPisoId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUTOID");

                    b.Property<int>("QtdEntrada")
                        .HasColumnType("int")
                        .HasColumnName("QTDENTRADA");

                    b.Property<int>("QuantidadeLote")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOID");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoPisoId");

                    b.ToTable("LOTE", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoAll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOSISTEMA");

                    b.Property<string>("CodigoFornecedor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOFORNECEDOR");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("PRODUTOALL", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoDeposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoSistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOSISTEMA");

                    b.Property<DateTime?>("DataEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAENTRADA");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<int>("DepositoId")
                        .HasColumnType("int")
                        .HasColumnName("DEPOSITOIID");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MARCA");

                    b.Property<string>("NomeDeposito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMEDEPOSITO");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMEPRODUTO");

                    b.Property<int>("ProdutoGeralId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUTOGERALID");

                    b.Property<int>("QtdEntrada")
                        .HasColumnType("int")
                        .HasColumnName("QTDENTRADA");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("UsuarioIdAlteracao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOIDALTERACAO");

                    b.Property<string>("UsuarioIdCadastro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOIDCADASTRO");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.HasIndex("ProdutoGeralId");

                    b.ToTable("PRODUTODEPOSITO", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoFalta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOSISTEMA");

                    b.Property<string>("CodigoFornecedor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOFORNECEDOR");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("DataSolicitacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATASOLICITACAO");

                    b.Property<string>("Fornecedor1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORNECEDOR1");

                    b.Property<string>("Fornecedor2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORNECEDOR2");

                    b.Property<string>("Loja")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOJA");

                    b.Property<int>("LojaId")
                        .HasColumnType("int")
                        .HasColumnName("LOJAID");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<int>("ProdutoAllId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUTOALLID");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("UsuarioAutorizador")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOAUTORIZADOR");

                    b.Property<string>("Valor1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALOR1");

                    b.Property<string>("Valor2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALOR2");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("ProdutoAllId");

                    b.ToTable("PRODUTOFALTA", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoGeral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("IDCATEGORIA");

                    b.Property<string>("CodigoSistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOSISTEMA");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<int>("FornecedorGeralId")
                        .HasColumnType("int")
                        .HasColumnName("IDFORNECEDOR");

                    b.Property<string>("ImagemUrlGeral")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IMAGEMURL");

                    b.Property<string>("MarcaProduto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MARCA");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOME");

                    b.Property<int?>("QuantidadeProd")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("Un")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorGeralId");

                    b.ToTable("PRODUTOGERAL", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoPiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIAID");

                    b.Property<DateTime>("DataHoraAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<int>("DepositoId")
                        .HasColumnType("int")
                        .HasColumnName("DEPOSITOID");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int")
                        .HasColumnName("FORNECEDORID");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IMAGEMURL");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MARCA");

                    b.Property<decimal?>("MetroQCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MERTROQCAIXA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME");

                    b.Property<int?>("PecasCaixa")
                        .HasColumnType("int")
                        .HasColumnName("PECASCAIXA");

                    b.Property<string>("Pei")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PEI");

                    b.Property<decimal?>("PrecoCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECOCAIXA");

                    b.Property<decimal?>("PrecoMetroQ")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECOMETRO");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DepositoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("PRODUTOPISO", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Venda", b =>
                {
                    b.Property<int>("VendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaID"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAVENDA");

                    b.Property<int>("LoteId")
                        .HasColumnType("int")
                        .HasColumnName("LOTEID");

                    b.Property<int?>("LoteId1")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MARCA");

                    b.Property<string>("Nomeproduto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMEPRODUTO");

                    b.Property<string>("NumeroLote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NUMEROLOTE");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOID");

                    b.HasKey("VendaID");

                    b.HasIndex("LoteId");

                    b.HasIndex("LoteId1");

                    b.ToTable("HISTORICOVENDA", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.VendaProdutoGeral", b =>
                {
                    b.Property<int>("VendaProdutoGeralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaProdutoGeralId"));

                    b.Property<string>("CodigoSistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("DataVenda")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATAVENDA");

                    b.Property<DateTime?>("DataVendaManual")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAVENDAMANUAL");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MARCA");

                    b.Property<string>("NomeDeposito")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMEDEPOSITO");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMEPRODUTO");

                    b.Property<int>("ProdutoDepositoId")
                        .HasColumnType("int")
                        .HasColumnName("DEPOSITOID");

                    b.Property<int?>("ProdutoDepositoId1")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeVendida")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.Property<DateTime?>("UploadRelatorioVenda")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAUPLOADVENDA");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUARIOID");

                    b.HasKey("VendaProdutoGeralId");

                    b.HasIndex("ProdutoDepositoId");

                    b.HasIndex("ProdutoDepositoId1");

                    b.ToTable("VENDAPRODUTOGERAL", (string)null);
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.BaixaOcorrencia", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Ocorrencias.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Ocorrencias.Ocorrencia", null)
                        .WithMany("BaixaOcorrencias")
                        .HasForeignKey("OcorrenciaId1");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.Ocorrencia", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Fornecedores.FornecedorGeral", "FornecedorGeral")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("FornecedorGeralId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Lojas.Loja", "Loja")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Ocorrencias.TipoOcorrencia", "TipoOcorrencia")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("TipoOcorrenciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FornecedorGeral");

                    b.Navigation("Loja");

                    b.Navigation("TipoOcorrencia");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.BaixaAutProdFalt", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Produtos.ProdutoFalta", "ProdutoFalta")
                        .WithMany("BaixaAutProdFalt")
                        .HasForeignKey("ProdutoFaltaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProdutoFalta");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Lote", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Produtos.ProdutoPiso", "ProdutoPiso")
                        .WithMany("Lote")
                        .HasForeignKey("ProdutoPisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoPiso");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoDeposito", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Depositoss.Depositos", "Deposito")
                        .WithMany("ProdutoDepositos")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Produtos.ProdutoGeral", "ProdutoGeral")
                        .WithMany("ProdutoDeposito")
                        .HasForeignKey("ProdutoGeralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("ProdutoGeral");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoFalta", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Lojas.Loja", "LojaNavigation")
                        .WithMany("ProdutoFalta")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Produtos.ProdutoAll", "ProdutoAllNavigation")
                        .WithMany("ProdutoFalta")
                        .HasForeignKey("ProdutoAllId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LojaNavigation");

                    b.Navigation("ProdutoAllNavigation");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoGeral", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Produtos.Categoria", "Categoria")
                        .WithMany("ProdutosGeral")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Fornecedores.FornecedorGeral", "Fornecedor")
                        .WithMany("ProdutosGeral")
                        .HasForeignKey("FornecedorGeralId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoPiso", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Produtos.Categoria", "Categoria")
                        .WithMany("ProdutosPiso")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Depositoss.Depositos", "Depositos")
                        .WithMany("ProdutoPiso")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Fornecedores.FornecedorGeral", "Fornecedor")
                        .WithMany("ProdutosPiso")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Depositos");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Venda", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Produtos.Lote", "Lote")
                        .WithMany()
                        .HasForeignKey("LoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Produtos.Lote", null)
                        .WithMany("Vendas")
                        .HasForeignKey("LoteId1");

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.VendaProdutoGeral", b =>
                {
                    b.HasOne("CasaColombo.Domain.Entities.Produtos.ProdutoDeposito", "ProdutoDeposito")
                        .WithMany()
                        .HasForeignKey("ProdutoDepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaColombo.Domain.Entities.Produtos.ProdutoDeposito", null)
                        .WithMany("VendaProdutoGeral")
                        .HasForeignKey("ProdutoDepositoId1");

                    b.Navigation("ProdutoDeposito");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Depositoss.Depositos", b =>
                {
                    b.Navigation("ProdutoDepositos");

                    b.Navigation("ProdutoPiso");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Fornecedores.FornecedorGeral", b =>
                {
                    b.Navigation("Ocorrencia");

                    b.Navigation("ProdutosGeral");

                    b.Navigation("ProdutosPiso");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Lojas.Loja", b =>
                {
                    b.Navigation("Ocorrencia");

                    b.Navigation("ProdutoFalta");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.Ocorrencia", b =>
                {
                    b.Navigation("BaixaOcorrencias");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Ocorrencias.TipoOcorrencia", b =>
                {
                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Categoria", b =>
                {
                    b.Navigation("ProdutosGeral");

                    b.Navigation("ProdutosPiso");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.Lote", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoAll", b =>
                {
                    b.Navigation("ProdutoFalta");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoDeposito", b =>
                {
                    b.Navigation("VendaProdutoGeral");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoFalta", b =>
                {
                    b.Navigation("BaixaAutProdFalt");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoGeral", b =>
                {
                    b.Navigation("ProdutoDeposito");
                });

            modelBuilder.Entity("CasaColombo.Domain.Entities.Produtos.ProdutoPiso", b =>
                {
                    b.Navigation("Lote");
                });
#pragma warning restore 612, 618
        }
    }
}
